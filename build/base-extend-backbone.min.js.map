{"version":3,"sources":["webpack:///base-extend-backbone.min.js","webpack:///webpack/bootstrap 7eedbd8eb29955e7ed2f","webpack:///./src/index.js","webpack:///./src/instance/baseView.js","webpack:///external \"window.Backbone\"","webpack:///external \"window.artTemplate\"","webpack:///./src/util/warn.js","webpack:///./config.js","webpack:///./src/util/debug.js","webpack:///./src/util/tools.js","webpack:///./src/instance/baseRouter.js","webpack:///./src/entity/ManagedObject.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","BaseView","BaseModel","BaseRouter","ManagedObject","View","Model","Router","Backbone","tplEng","warn","tools","error","extend","initialize","options","this","_ICEOptions","_","isFunction","beforeMount","$el","$","_ICEinit","rawLoader","_template","append","afterMount","_ICEObject","_ICEinitNode","__YYTPC__","ready","_ICEinitEvent","delegateEvents","events","self","$parent","parent","$children","$root","push","on","args","toArray","arguments","context","apply","_ICEDestroy","beforeDestroy","remove","undelegate","destroyed","triggerParentHook","event","isString","splice","trigger","compileHTML","tplStr","data","compile","broadcast","children","i","j","length","child","propagate","dispatch","destroy","methods","props","state","_store","window","artTemplate","Config","Debug","msg","e","debug","config","scheme","env","alpha","url_prefix","beta","release","hasConsole","undefined","console","warning","Error","stack","global","factory","toString","Object","prototype","OBJECT_TYPE","isPlainObject","obj","isObject","hasOwnProperty","hasOwn","key","list","index","_array","Array","toType","value","exportToNumber","number","Number","isNaN","isArray","mergeData","to","from","toVal","fromVal","routerHash","curr","router","routerHashTop","routerHashRmove","addLifeCycleHelper","name","view","parameter","top","stackCheckHandler","viewWillDisappear","dealloc","_router","indexOf","cid","viewDidDisappear","$parameter","_didLoad","once","viewDidLoad","viewWillAppear","viewDidAppear","Tools","baseModelSort","entity","$update","$get","expression","attrNodes","split","lh","node","$set","$filter","result","n","val","k","$sort","_sort","logic","val1","val2","fun","temp"],"mappings":"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","file":"base-extend-backbone.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar BaseView = __webpack_require__(1);\n\tvar BaseModel = __webpack_require__(8);\n\tvar BaseRouter = __webpack_require__(8);\n\tvar ManagedObject = __webpack_require__(9);\n\tmodule.exports = {\n\t    'View':BaseView,\n\t    'Model':BaseModel,\n\t    'Router':BaseRouter,\n\t    'ManagedObject':ManagedObject\n\t};\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @time 2012年10月19日\n\t * @author icepy\n\t * @info 完成基础的View类\n\t *\n\t * @time 2016年2月27日\n\t * @author icepy\n\t * @info 改造兼容webpack打包\n\t */\n\t\n\t'use strict';\n\t\n\tvar Backbone = __webpack_require__(2);\n\tvar tplEng = __webpack_require__(3);\n\tvar warn = __webpack_require__(4);\n\tvar tools = __webpack_require__(7);\n\tvar error = __webpack_require__(6).error;\n\tvar BaseView = Backbone.View.extend({\n\t\tinitialize:function(options){\n\t\t\t//初始化参数\n\t\t\tthis._ICEOptions = options || {};\n\t\n\t\t\tif (_.isFunction(this.beforeMount)){\n\t\t\t\tthis.beforeMount();\n\t\t\t}else{\n\t\t\t\twarn('推荐使用beforeMount钩子方法，用来初始化自定义属性');\n\t\t\t};\n\t\t\tif (this._ICEOptions.id) {\n\t\t\t\tthis.$el = $(this._ICEOptions.id);\n\t\t\t};\n\t\t\tthis._ICEinit();\n\t\t\treturn this;\n\t\t},\n\t\t_ICEinit:function(){\n\t\t\tif (_.isFunction(this.rawLoader)) {\n\t\t\t\tthis._template = this.rawLoader();\n\t\t\t\tif (this._template) {\n\t\t\t\t\tthis.$el.append(this._template);\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\twarn('推荐使用rawLoader钩子方法用来加载需要动态获取的模板');\n\t\t\t};\n\t\t\tif (typeof this.afterMount === 'function') {\n\t\t\t\tthis.afterMount();\n\t\t\t}else{\n\t\t\t\twarn('推荐使用afterMount钩子方法，用来获取DOM对象');\n\t\t\t};\n\t\t\tthis._ICEObject();\n\t\t},\n\t\t_ICEObject:function(){\n\t\t\tthis._ICEinitNode();\n\t\t\tthis.__YYTPC__ = true;\n\t\t\tif (_.isFunction(this.ready)) {\n\t\t\t\tthis.ready(this._ICEOptions);\n\t\t\t}else{\n\t\t\t\terror('一个View对象周期内必须实现ready钩子方法');\n\t\t\t};\n\t\t},\n\t\t_ICEinitEvent:function(){\n\t\t\tthis.delegateEvents(this.events);\n\t\t},\n\t\t_ICEinitNode:function(){\n\t\t\tvar self = this;\n\t\t\tthis.$parent = this._ICEOptions.parent;\n\t\t\tthis.$children  = [];\n\t\t\tthis.$root = this.$parent ? this.$parent.$root : this;\n\t\t\tif (this.$parent && this.$parent.__YYTPC__) {\n\t\t\t\tthis.$parent.$children.push(this);\n\t\t\t};\n\t\t\tthis.on('hook:context',function(){\n\t\t\t\tvar args = tools.toArray(arguments);\n\t\t\t\tif (self && self.__YYTPC__) {\n\t\t\t\t\tif (_.isFunction(self.context)) {\n\t\t\t\t\t\tself.context.apply(self,args);\n\t\t\t\t\t}else{\n\t\t\t\t\t\twarn('未定义context上下文钩子方法');\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\t_ICEDestroy:function(){\n\t\t\t//实例销毁之前\n\t\t\tif (_.isFunction(this.beforeDestroy)) {\n\t\t\t\tthis.beforeDestroy();\n\t\t\t};\n\t\t\tthis.remove();\n\t\t\tthis.undelegate();\n\t\t\t//实例销毁之后\n\t\t\tif (_.isFunction(this.destroyed)) {\n\t\t\t\tthis.destroyed();\n\t\t\t};\n\t\t},\n\t\ttriggerParentHook:function(){\n\t\t\tif (this.$parent && this.$parent.__YYTPC__) {\n\t\t\t\tvar args = tools.toArray(arguments);\n\t\t\t\tvar event = args[0];\n\t\t\t\tif (_.isString(event)) {\n\t\t\t\t\tevent = 'hook:'+ event;\n\t\t\t\t\targs[0] = event;\n\t\t\t\t}else{\n\t\t\t\t\targs.splice(0,0,'hook:context');\n\t\t\t\t};\n\t\t\t\tthis.$parent.trigger.apply(this.$parent,args);\n\t\t\t}else{\n\t\t\t\twarn('在View实例对象初始化时未指明对象的结构关系');\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * [compileHTML 编译模板]\n\t\t * @param  {[type]} tplStr [description]\n\t\t * @param  {[type]} data   [description]\n\t\t * @return {[type]}        [description]\n\t\t */\n\t\tcompileHTML:function(tplStr,data){\n\t\t\treturn tplEng.compile(tplStr)(data);\n\t\t},\n\t\t/**\n\t\t * [broadcast 触发所有子组件相应的事件]\n\t\t * @param  {[type]} event [description]\n\t\t * @return {[type]}       [description]\n\t\t */\n\t\tbroadcast:function(event){\n\t\t\tvar args = tools.toArray(arguments);\n\t\t\tvar children = this.$children;\n\t\t\tvar i = 0;\n\t\t\tvar j = children.length;\n\t\t\tfor(;i<j;i++){\n\t\t\t\tvar child = children[i];\n\t\t\t\tvar propagate = child.trigger.apply(child,args);\n\t\t\t\tif(propagate){\n\t\t\t\t\tchild.broadcast.apply(child,args);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t/**\n\t\t * [dispatch 触发所有父组件相应的事件]\n\t\t * @param  {[type]} event [description]\n\t\t * @return {[type]}       [description]\n\t\t */\n\t\tdispatch:function(event){\n\t\t\tvar args = tools.toArray(arguments);\n\t\t\tvar parent = this.$parent;\n\t\t\twhile(parent){\n\t\t\t\tparent.trigger.apply(parent,args);\n\t\t\t\tparent = parent.$parent;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t/**\n\t\t * [destroy 销毁实例]\n\t\t * @return {[type]} [description]\n\t\t */\n\t\tdestroy:function(){\n\t\t\tthis._ICEOptions = null;\n\t\t\tthis.methods = null;\n\t\t\tthis.props = null;\n\t\t\tthis.state = null;\n\t\t\tthis._store = null;\n\t\t\tthis.$children.length = 0;\n\t\t\tthis.$parent = null;\n\t\t\tthis.$root = null;\n\t\t\tthis._ICEDestroy();\n\t\t}\n\t});\n\t\n\tmodule.exports = BaseView;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = window.Backbone;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = window.artTemplate;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @time 2012年10月26日\n\t * @author icepy\n\t * @info 完成warn包装\n\t */\n\t\n\t'use strict';\n\t\n\tvar Config = __webpack_require__(5);\n\tvar Debug = __webpack_require__(6);\n\t\n\tvar warn = function(msg,e){\n\t\tif (Config.debug) {\n\t\t\tDebug.warn(msg,e)\n\t\t}\n\t}\n\tmodule.exports = warn;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tvar config = {\n\t    scheme: 'alpha',\n\t    env:{\n\t        alpha:{\n\t            'url_prefix':'http://127.0.0.1:8081'\n\t        },\n\t        beta:{\n\t            'url_prefix':'http://beta.com:8081'\n\t        },\n\t        release:{\n\t            'url_prefix':'http://aip.com'\n\t        }\n\t    },\n\t    debug:true\n\t};\n\tmodule.exports = config;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @time 2012年10月26日\n\t * @author icepy\n\t * @info debug信息打印\n\t */\n\t\n\t'use strict';\n\t\n\tvar debug = {}\n\tdebug.warn = function(msg,e){\n\t\tvar hasConsole = typeof console !== undefined;\n\t\tif (hasConsole) {\n\t\t\tconsole.warn('[YYT PC Warning]:'+ msg);\n\t\t\tif (e) {\n\t\t\t\tthrow e;\n\t\t\t}else{\n\t\t\t\tvar warning = new Error('Warning Stack Trace');\n\t\t\t\tconsole.warn(warning.stack);\n\t\t\t}\n\t\t};\n\t\treturn hasConsole;\n\t};\n\tdebug.error = function(msg){\n\t\tvar error = new Error(msg);\n\t\tthrow error.stack;\n\t};\n\tmodule.exports = debug;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @time 2012年10月26日\n\t * @author icepy\n\t * @info 完成处理tools对象\n\t */\n\t\n\t'use strict';\n\t\n\t(function (factory) {\n\t    var root = (typeof self == 'object' && self.self == self && self) ||\n\t        (typeof global == 'object' && global.global == global && global);\n\t    if (true) {\n\t        module.exports = factory();\n\t    } else if (typeof exports === 'object') {\n\t        exports['tools'] = factory()\n\t    } else {\n\t        if (!root.ICEPlugs) {\n\t            root.ICEPlugs = {};\n\t        }\n\t        root.ICEPlugs.tools = factory();\n\t    }\n\t})(function () {\n\t    var tools = {};\n\t    var toString = Object.prototype.toString;\n\t    var OBJECT_TYPE = '[object Object]';\n\t    /**\n\t     * [isPlainObject 判断是否为普通对象]\n\t     * @param  {[Object]}  obj [对象]\n\t     * @return {Boolean}\n\t     */\n\t    tools.isPlainObject = function (obj) {\n\t        return toString.call(obj) === OBJECT_TYPE;\n\t    };\n\t    /**\n\t     * [isObject 判断是否为对象]\n\t     * @param  {[*]}  obj [任意一个元素]\n\t     * @return {Boolean}\n\t     */\n\t    tools.isObject = function (obj) {\n\t        return obj !== null && typeof obj === 'object';\n\t    };\n\t    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t    /**\n\t     * [hasOwn 检查对象是否为自身的属性]\n\t     * @param  {[Object]}  obj [description]\n\t     * @param  {[String]}  key [description]\n\t     * @return {Boolean}     [description]\n\t     */\n\t    tools.hasOwn = function (obj, key) {\n\t        return hasOwnProperty.call(obj, key);\n\t    };\n\t    /**\n\t     * [toArray 类数组对象转数组]\n\t     * @param  {[Array-like]} list  [类数组]\n\t     * @param  {[Number]} index [起始索引]\n\t     * @return {[Array]}       [返回一个新的真实数组]\n\t     */\n\t    tools.toArray = function (list, index) {\n\t        index = index || 0;\n\t        var i = list.length - index;\n\t        var _array = new Array(i);\n\t        while (i--) {\n\t            _array[i] = list[i + index];\n\t        }\n\t        return _array;\n\t    };\n\t    /**\n\t     * [toType 导出类型字符串]\n\t     * @param  {[type]} value [description]\n\t     * @return {[type]}       [description]\n\t     */\n\t    tools.toType = function (value) {\n\t        return toString.call(value);\n\t    };\n\t    /**\n\t     * [exportToNumber 导出数字]\n\t     * @param  {[*]} value [description]\n\t     * @return {[*|Number]}       [description]\n\t     */\n\t    tools.exportToNumber = function (value) {\n\t        if (typeof value !== 'string') {\n\t            return value;\n\t        } else {\n\t            var number = Number(value);\n\t            return isNaN(number) ? value : number;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * [isArray 判断是否为数组]\n\t     * @param  {*} value [description]\n\t     * @return {Boolean}       [description]\n\t     */\n\t    tools.isArray = function(obj){\n\t        return tools.toType(obj) === '[object Array]';\n\t    };\n\t\n\t    /**\n\t     * [mergeData 合并数据]\n\t     * @param  {obj} value [description]\n\t     * @param  {obj} value [description]\n\t     * @return {obj}       [description]\n\t     */\n\t    tools.mergeData = function(to,from){\n\t        var key,toVal,fromVal;\n\t        for(key in from){\n\t            toVal = to[key];\n\t            fromVal = from[key];\n\t            if (tools.isPlainObject(toVal) && tools.isPlainObject(fromVal)) {\n\t                tools.mergeData(toVal,fromVal);\n\t            }\n\t        }\n\t        return to;\n\t    };\n\t    return tools;\n\t});\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @time 2016年3月21日\n\t * @author icepy\n\t * @info 基于路由的生命周期\n\t */\n\t\n\t'use strict'\n\t\n\tvar Backbone = __webpack_require__(2);\n\tvar warn = __webpack_require__(4);\n\tvar stack = [];\n\tvar routerHash = {};\n\tvar curr = null;\n\tvar router = null;\n\tvar routerHashTop = function(key) {\n\t    return routerHash[key];\n\t};\n\tvar routerHashRmove = function(key) {\n\t    delete routerHash[key];\n\t};\n\tvar BaseRouter = Backbone.Router.extend({\n\t    addLifeCycleHelper: function(name, view, parameter) {\n\t        var top = routerHashTop(name);\n\t        var stackCheckHandler = function() {\n\t            if (curr) {\n\t                //视图隐藏或者销毁之前\n\t                if (_.isFunction(router.viewWillDisappear)) {\n\t                    router.viewWillDisappear.call(curr);\n\t                }else{\n\t                    if (router.dealloc) {\n\t                        warn('销毁实例{dealloc = true}之前必须存在viewWillDisappear，在此进行解除其他对象的引用或者调用（每个）destroy方法');\n\t                    };\n\t                };\n\t                if (router.dealloc) {\n\t                    //进入实例销毁流程\n\t                    curr.destroy();\n\t                    var obj = routerHashTop(curr._router);\n\t                    if (obj) {\n\t                        routerHashRmove(curr.router);\n\t                        stack.splice(stack.indexOf(curr.cid), 1);\n\t                        obj = null;\n\t                    };\n\t                };\n\t                //视图隐藏或者销毁之后\n\t                if (_.isFunction(router.viewDidDisappear)) {\n\t                    router.viewDidDisappear.call(curr);\n\t                };\n\t            }\n\t        }\n\t        if (top) {\n\t            stackCheckHandler();\n\t            curr = null;\n\t            curr = top;\n\t            curr.trigger('viewWillAppear');\n\t        } else {\n\t            stackCheckHandler();\n\t            curr = parameter ? new view({\n\t                '$parameter': parameter\n\t            }) : new view();\n\t            stack.push(curr.cid);\n\t            curr._router = name;\n\t            curr._didLoad = false; //记录viewDidLoad跟随路由呈现的生命周期状态\n\t            router = curr.router;\n\t            routerHash[name] = curr;\n\t            //视图呈现的生命周期只会触发一次\n\t            curr.once('viewDidLoad', function() {\n\t                if (_.isFunction(router.viewDidLoad)) {\n\t                    router.viewDidLoad.call(curr);\n\t                }else{\n\t                    warn('基于路由的Root Component，必须存在viewDidLoad钩子');\n\t                };\n\t                if (!curr._didLoad) {\n\t                    curr._didLoad = true;\n\t                    curr.trigger('viewDidAppear');\n\t                };\n\t            });\n\t            //视图将要呈现之前\n\t            curr.on('viewWillAppear', function() {\n\t                if (_.isFunction(router.viewWillAppear)) {\n\t                    router.viewWillAppear.call(curr);\n\t                }else{\n\t                    warn('基于路由的Root Component，必须存在viewWillAppear');\n\t                };\n\t                if (!curr._didLoad) {\n\t                    //viewDidLoad事件还未触发\n\t                    curr.trigger('viewDidLoad');\n\t                }else{\n\t                    curr.trigger('viewDidAppear');\n\t                };\n\t            });\n\t            //视图已经呈现之后\n\t            curr.on('viewDidAppear', function() {\n\t                if (_.isFunction(router.viewDidAppear)) {\n\t                    router.viewDidAppear.call(curr);\n\t                }else{\n\t                    warn('基于路由的Root Component，必须存在viewDidAppear');\n\t                };\n\t            });\n\t            curr.trigger('viewWillAppear');\n\t        }\n\t        return curr;\n\t    }\n\t});\n\tmodule.exports = BaseRouter;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @time 2016年3月29日\n\t * @author icepy\n\t * @info 实体管理类\n\t */\n\tvar Tools = __webpack_require__(7);\n\tvar baseModelSort = [];\n\t\n\tvar ManagedObject = function(options){\n\t    options = options || {};\n\t    this.entity = options.entity || {};\n\t};\n\t\n\tManagedObject.prototype.$update = function(obj){\n\t    var entity = _.extend(this.entity,obj);\n\t    this.entity = null;\n\t    this.entity = entity;\n\t};\n\t/**\n\t * [$get 从实体中获取数据，无参将返回所有数据，参数使用.结构化表达式（this.$get('items.0.id')）]\n\t * @param  {[type]} expression [description]\n\t * @return {[type]}            [description]\n\t */\n\tManagedObject.prototype.$get = function(expression){\n\t    if (!expression) {\n\t        return this.entity;\n\t    }\n\t    var attrNodes = expression.split('.');\n\t    var lh = attrNodes.length;\n\t    if (lh > 0) {\n\t        var node = attrNodes[0];\n\t        var i = 0;\n\t        var entity = this.entity;\n\t        while(node){\n\t            i++\n\t            entity = entity[node];\n\t            node = attrNodes[i];\n\t        }\n\t        return entity;\n\t    }\n\t};\n\t/**\n\t * [$set 向实体内部更新数据，以key/value的方式，第一个参数使用结构化表达式，第二个参数可以是任意类型的数据]\n\t * @param {[type]} expression [description]\n\t * @param {[type]} value      [description]\n\t */\n\tManagedObject.prototype.$set = function(expression,value,options){\n\t    if (expression === null || expression === undefined) {\n\t        return this;\n\t    };\n\t    if (Tools.isPlainObject(expression)) {\n\t        this.entity = null;\n\t        this.entity = expression;\n\t        return this.entity;\n\t    };\n\t    var attrNodes = expression.split('.');\n\t    var lh = attrNodes.length;\n\t    if (lh > 0) {\n\t        var i = 0;\n\t        var node = attrNodes[i];\n\t        var entity = this.entity;\n\t        if (lh !== 1) {\n\t            while(node){\n\t                i++\n\t                entity = entity[node];\n\t                node = attrNodes[i];\n\t                if (i > (lh - 2)) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        switch(Tools.toType(entity)){\n\t            case '[object Object]':\n\t                entity[node] = value;\n\t                break;\n\t            case '[object Array]':\n\t                entity[Tools.exportToNumber(node)] = value;\n\t                break;\n\t            default:\n\t                entity = value;\n\t                break;\n\t        };\n\t    }\n\t};\n\t/**\n\t * [$filter 向实体内部的某项数据进行筛选，第一个参数是要筛选数据的.结构化表达式，第二个参数是筛选根据]\n\t * @param  {[type]} expression [description]\n\t * @param  {[type]} value      [description]\n\t * @return {[type]}            [description]\n\t */\n\tManagedObject.prototype.$filter = function(expression,value){\n\t    var data = this.$get(expression);\n\t    var result = [];\n\t    if (Tools.isArray(data)) {\n\t        var i = data.length;\n\t        var n;\n\t        while(i--){\n\t            var val = data[i];\n\t            switch(Tools.toType(value)){\n\t                case '[object Object]':\n\t                    n = true;\n\t                    for(var k in value){\n\t                        if (!(val[k] === value[k])) {\n\t                            n = null;\n\t                            break;\n\t                        }\n\t                    }\n\t                    break\n\t                case '[object Function]':\n\t                    n = value(val,i);\n\t                    break\n\t                default:\n\t                    n = (val === value);\n\t                    break\n\t            };\n\t            if (n) {\n\t                result.push(val)\n\t            };\n\t        };\n\t    };\n\t    return result;\n\t};\n\t/**\n\t * [$sort 对实体内部的某项数据进行排序，第二个参数是要排序数据的.结构化表达式，第二个参数是排序的根据]\n\t * @param  {[type]} expression [description]\n\t * @param  {[type]} value      [description]\n\t * @return {[type]}            [description]\n\t */\n\tManagedObject.prototype.$sort = function(expression,value){\n\t    // > 大于 true\n\t    // < 小于 false\n\t    var data = this.$get(expression);\n\t    baseModelSort.length = 0;\n\t    if (Tools.isArray(data)) {\n\t        switch(Tools.toType(value)){\n\t            case '[object Function]':\n\t                baseModelSort = this._sort(data,value)\n\t                break\n\t            default:\n\t                if (typeof value === 'string') {\n\t                    var attrNodes = value.split('.');\n\t                    var logic = null;\n\t                    var lh = attrNodes.length - 1;\n\t                    switch(attrNodes[lh]){\n\t                        case '>':\n\t                            logic = true;\n\t                            break\n\t                        case '<':\n\t                            logic = false;\n\t                            break\n\t                        default:\n\t                            return baseModelSort;\n\t                            break\n\t                    };\n\t                    if (logic !== null) {\n\t                        return this._sort(data,function(val1,val2){\n\t                            var node = attrNodes[0];\n\t                            var i = 0;\n\t                            while(node){\n\t                                val1 = val1[node];\n\t                                val2 = val2[node];\n\t                                i++\n\t                                if (i === lh) {\n\t                                    break;\n\t                                };\n\t                                node = attrNodes[i];\n\t                            }\n\t                            if (logic) {\n\t                                return val1 > val2;\n\t                            }else{\n\t                                return val1 < val2;\n\t                            };\n\t                        });\n\t                    }\n\t\n\t                };\n\t                break\n\t        }\n\t    };\n\t    return baseModelSort;\n\t};\n\t\n\tManagedObject.prototype._sort = function(data,fun){\n\t    var n = data.length;\n\t    if (n < 2) {\n\t        return data;\n\t    };\n\t    var i = 0;\n\t    var j = i+1;\n\t    var logic,temp,key;\n\t    for(;i<j;i++){\n\t        for(j = i+1;j<n;j++){\n\t            logic = fun.call(this,data[i],data[j]);\n\t            key = (typeof logic === 'number' ? logic : !!logic ? 1 : 0) > 0 ? true : false;\n\t            if (key) {\n\t                temp = data[i];\n\t                data[i] = data[j];\n\t                data[j] = temp;\n\t            }\n\t        }\n\t    }\n\t    return data;\n\t};\n\t\n\tmodule.exports = ManagedObject;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** base-extend-backbone.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7eedbd8eb29955e7ed2f\n **/","var BaseView = require('./instance/baseView');\nvar BaseModel = require('./instance/baseRouter');\nvar BaseRouter = require('./instance/baseRouter');\nvar ManagedObject = require('./entity/ManagedObject');\nmodule.exports = {\n    'View':BaseView,\n    'Model':BaseModel,\n    'Router':BaseRouter,\n    'ManagedObject':ManagedObject\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/**\n * @time 2012年10月19日\n * @author icepy\n * @info 完成基础的View类\n *\n * @time 2016年2月27日\n * @author icepy\n * @info 改造兼容webpack打包\n */\n\n'use strict';\n\nvar Backbone = require('backbone');\nvar tplEng = require('tplEng');\nvar warn = require('../util/warn');\nvar tools = require('../util/tools');\nvar error = require('../util/debug').error;\nvar BaseView = Backbone.View.extend({\n\tinitialize:function(options){\n\t\t//初始化参数\n\t\tthis._ICEOptions = options || {};\n\n\t\tif (_.isFunction(this.beforeMount)){\n\t\t\tthis.beforeMount();\n\t\t}else{\n\t\t\twarn('推荐使用beforeMount钩子方法，用来初始化自定义属性');\n\t\t};\n\t\tif (this._ICEOptions.id) {\n\t\t\tthis.$el = $(this._ICEOptions.id);\n\t\t};\n\t\tthis._ICEinit();\n\t\treturn this;\n\t},\n\t_ICEinit:function(){\n\t\tif (_.isFunction(this.rawLoader)) {\n\t\t\tthis._template = this.rawLoader();\n\t\t\tif (this._template) {\n\t\t\t\tthis.$el.append(this._template);\n\t\t\t};\n\t\t}else{\n\t\t\twarn('推荐使用rawLoader钩子方法用来加载需要动态获取的模板');\n\t\t};\n\t\tif (typeof this.afterMount === 'function') {\n\t\t\tthis.afterMount();\n\t\t}else{\n\t\t\twarn('推荐使用afterMount钩子方法，用来获取DOM对象');\n\t\t};\n\t\tthis._ICEObject();\n\t},\n\t_ICEObject:function(){\n\t\tthis._ICEinitNode();\n\t\tthis.__YYTPC__ = true;\n\t\tif (_.isFunction(this.ready)) {\n\t\t\tthis.ready(this._ICEOptions);\n\t\t}else{\n\t\t\terror('一个View对象周期内必须实现ready钩子方法');\n\t\t};\n\t},\n\t_ICEinitEvent:function(){\n\t\tthis.delegateEvents(this.events);\n\t},\n\t_ICEinitNode:function(){\n\t\tvar self = this;\n\t\tthis.$parent = this._ICEOptions.parent;\n\t\tthis.$children  = [];\n\t\tthis.$root = this.$parent ? this.$parent.$root : this;\n\t\tif (this.$parent && this.$parent.__YYTPC__) {\n\t\t\tthis.$parent.$children.push(this);\n\t\t};\n\t\tthis.on('hook:context',function(){\n\t\t\tvar args = tools.toArray(arguments);\n\t\t\tif (self && self.__YYTPC__) {\n\t\t\t\tif (_.isFunction(self.context)) {\n\t\t\t\t\tself.context.apply(self,args);\n\t\t\t\t}else{\n\t\t\t\t\twarn('未定义context上下文钩子方法');\n\t\t\t\t};\n\t\t\t};\n\t\t});\n\t},\n\t_ICEDestroy:function(){\n\t\t//实例销毁之前\n\t\tif (_.isFunction(this.beforeDestroy)) {\n\t\t\tthis.beforeDestroy();\n\t\t};\n\t\tthis.remove();\n\t\tthis.undelegate();\n\t\t//实例销毁之后\n\t\tif (_.isFunction(this.destroyed)) {\n\t\t\tthis.destroyed();\n\t\t};\n\t},\n\ttriggerParentHook:function(){\n\t\tif (this.$parent && this.$parent.__YYTPC__) {\n\t\t\tvar args = tools.toArray(arguments);\n\t\t\tvar event = args[0];\n\t\t\tif (_.isString(event)) {\n\t\t\t\tevent = 'hook:'+ event;\n\t\t\t\targs[0] = event;\n\t\t\t}else{\n\t\t\t\targs.splice(0,0,'hook:context');\n\t\t\t};\n\t\t\tthis.$parent.trigger.apply(this.$parent,args);\n\t\t}else{\n\t\t\twarn('在View实例对象初始化时未指明对象的结构关系');\n\t\t}\n\t},\n\t/**\n\t * [compileHTML 编译模板]\n\t * @param  {[type]} tplStr [description]\n\t * @param  {[type]} data   [description]\n\t * @return {[type]}        [description]\n\t */\n\tcompileHTML:function(tplStr,data){\n\t\treturn tplEng.compile(tplStr)(data);\n\t},\n\t/**\n\t * [broadcast 触发所有子组件相应的事件]\n\t * @param  {[type]} event [description]\n\t * @return {[type]}       [description]\n\t */\n\tbroadcast:function(event){\n\t\tvar args = tools.toArray(arguments);\n\t\tvar children = this.$children;\n\t\tvar i = 0;\n\t\tvar j = children.length;\n\t\tfor(;i<j;i++){\n\t\t\tvar child = children[i];\n\t\t\tvar propagate = child.trigger.apply(child,args);\n\t\t\tif(propagate){\n\t\t\t\tchild.broadcast.apply(child,args);\n\t\t\t};\n\t\t}\n\t\treturn this;\n\t},\n\t/**\n\t * [dispatch 触发所有父组件相应的事件]\n\t * @param  {[type]} event [description]\n\t * @return {[type]}       [description]\n\t */\n\tdispatch:function(event){\n\t\tvar args = tools.toArray(arguments);\n\t\tvar parent = this.$parent;\n\t\twhile(parent){\n\t\t\tparent.trigger.apply(parent,args);\n\t\t\tparent = parent.$parent;\n\t\t}\n\t\treturn this;\n\t},\n\t/**\n\t * [destroy 销毁实例]\n\t * @return {[type]} [description]\n\t */\n\tdestroy:function(){\n\t\tthis._ICEOptions = null;\n\t\tthis.methods = null;\n\t\tthis.props = null;\n\t\tthis.state = null;\n\t\tthis._store = null;\n\t\tthis.$children.length = 0;\n\t\tthis.$parent = null;\n\t\tthis.$root = null;\n\t\tthis._ICEDestroy();\n\t}\n});\n\nmodule.exports = BaseView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/instance/baseView.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = window.Backbone;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"window.Backbone\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = window.artTemplate;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"window.artTemplate\"\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * @time 2012年10月26日\n * @author icepy\n * @info 完成warn包装\n */\n\n'use strict';\n\nvar Config = require('config');\nvar Debug = require('./debug');\n\nvar warn = function(msg,e){\n\tif (Config.debug) {\n\t\tDebug.warn(msg,e)\n\t}\n}\nmodule.exports = warn;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/warn.js\n ** module id = 4\n ** module chunks = 0\n **/","var config = {\n    scheme: 'alpha',\n    env:{\n        alpha:{\n            'url_prefix':'http://127.0.0.1:8081'\n        },\n        beta:{\n            'url_prefix':'http://beta.com:8081'\n        },\n        release:{\n            'url_prefix':'http://aip.com'\n        }\n    },\n    debug:true\n};\nmodule.exports = config;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./config.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * @time 2012年10月26日\n * @author icepy\n * @info debug信息打印\n */\n\n'use strict';\n\nvar debug = {}\ndebug.warn = function(msg,e){\n\tvar hasConsole = typeof console !== undefined;\n\tif (hasConsole) {\n\t\tconsole.warn('[YYT PC Warning]:'+ msg);\n\t\tif (e) {\n\t\t\tthrow e;\n\t\t}else{\n\t\t\tvar warning = new Error('Warning Stack Trace');\n\t\t\tconsole.warn(warning.stack);\n\t\t}\n\t};\n\treturn hasConsole;\n};\ndebug.error = function(msg){\n\tvar error = new Error(msg);\n\tthrow error.stack;\n};\nmodule.exports = debug;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/debug.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * @time 2012年10月26日\n * @author icepy\n * @info 完成处理tools对象\n */\n\n'use strict';\n\n(function (factory) {\n    var root = (typeof self == 'object' && self.self == self && self) ||\n        (typeof global == 'object' && global.global == global && global);\n    if (typeof exports === 'object' && typeof module === 'object') {\n        module.exports = factory();\n    } else if (typeof exports === 'object') {\n        exports['tools'] = factory()\n    } else {\n        if (!root.ICEPlugs) {\n            root.ICEPlugs = {};\n        }\n        root.ICEPlugs.tools = factory();\n    }\n})(function () {\n    var tools = {};\n    var toString = Object.prototype.toString;\n    var OBJECT_TYPE = '[object Object]';\n    /**\n     * [isPlainObject 判断是否为普通对象]\n     * @param  {[Object]}  obj [对象]\n     * @return {Boolean}\n     */\n    tools.isPlainObject = function (obj) {\n        return toString.call(obj) === OBJECT_TYPE;\n    };\n    /**\n     * [isObject 判断是否为对象]\n     * @param  {[*]}  obj [任意一个元素]\n     * @return {Boolean}\n     */\n    tools.isObject = function (obj) {\n        return obj !== null && typeof obj === 'object';\n    };\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    /**\n     * [hasOwn 检查对象是否为自身的属性]\n     * @param  {[Object]}  obj [description]\n     * @param  {[String]}  key [description]\n     * @return {Boolean}     [description]\n     */\n    tools.hasOwn = function (obj, key) {\n        return hasOwnProperty.call(obj, key);\n    };\n    /**\n     * [toArray 类数组对象转数组]\n     * @param  {[Array-like]} list  [类数组]\n     * @param  {[Number]} index [起始索引]\n     * @return {[Array]}       [返回一个新的真实数组]\n     */\n    tools.toArray = function (list, index) {\n        index = index || 0;\n        var i = list.length - index;\n        var _array = new Array(i);\n        while (i--) {\n            _array[i] = list[i + index];\n        }\n        return _array;\n    };\n    /**\n     * [toType 导出类型字符串]\n     * @param  {[type]} value [description]\n     * @return {[type]}       [description]\n     */\n    tools.toType = function (value) {\n        return toString.call(value);\n    };\n    /**\n     * [exportToNumber 导出数字]\n     * @param  {[*]} value [description]\n     * @return {[*|Number]}       [description]\n     */\n    tools.exportToNumber = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        } else {\n            var number = Number(value);\n            return isNaN(number) ? value : number;\n        }\n    };\n\n    /**\n     * [isArray 判断是否为数组]\n     * @param  {*} value [description]\n     * @return {Boolean}       [description]\n     */\n    tools.isArray = function(obj){\n        return tools.toType(obj) === '[object Array]';\n    };\n\n    /**\n     * [mergeData 合并数据]\n     * @param  {obj} value [description]\n     * @param  {obj} value [description]\n     * @return {obj}       [description]\n     */\n    tools.mergeData = function(to,from){\n        var key,toVal,fromVal;\n        for(key in from){\n            toVal = to[key];\n            fromVal = from[key];\n            if (tools.isPlainObject(toVal) && tools.isPlainObject(fromVal)) {\n                tools.mergeData(toVal,fromVal);\n            }\n        }\n        return to;\n    };\n    return tools;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/tools.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * @time 2016年3月21日\n * @author icepy\n * @info 基于路由的生命周期\n */\n\n'use strict'\n\nvar Backbone = require('backbone');\nvar warn = require('../util/warn');\nvar stack = [];\nvar routerHash = {};\nvar curr = null;\nvar router = null;\nvar routerHashTop = function(key) {\n    return routerHash[key];\n};\nvar routerHashRmove = function(key) {\n    delete routerHash[key];\n};\nvar BaseRouter = Backbone.Router.extend({\n    addLifeCycleHelper: function(name, view, parameter) {\n        var top = routerHashTop(name);\n        var stackCheckHandler = function() {\n            if (curr) {\n                //视图隐藏或者销毁之前\n                if (_.isFunction(router.viewWillDisappear)) {\n                    router.viewWillDisappear.call(curr);\n                }else{\n                    if (router.dealloc) {\n                        warn('销毁实例{dealloc = true}之前必须存在viewWillDisappear，在此进行解除其他对象的引用或者调用（每个）destroy方法');\n                    };\n                };\n                if (router.dealloc) {\n                    //进入实例销毁流程\n                    curr.destroy();\n                    var obj = routerHashTop(curr._router);\n                    if (obj) {\n                        routerHashRmove(curr.router);\n                        stack.splice(stack.indexOf(curr.cid), 1);\n                        obj = null;\n                    };\n                };\n                //视图隐藏或者销毁之后\n                if (_.isFunction(router.viewDidDisappear)) {\n                    router.viewDidDisappear.call(curr);\n                };\n            }\n        }\n        if (top) {\n            stackCheckHandler();\n            curr = null;\n            curr = top;\n            curr.trigger('viewWillAppear');\n        } else {\n            stackCheckHandler();\n            curr = parameter ? new view({\n                '$parameter': parameter\n            }) : new view();\n            stack.push(curr.cid);\n            curr._router = name;\n            curr._didLoad = false; //记录viewDidLoad跟随路由呈现的生命周期状态\n            router = curr.router;\n            routerHash[name] = curr;\n            //视图呈现的生命周期只会触发一次\n            curr.once('viewDidLoad', function() {\n                if (_.isFunction(router.viewDidLoad)) {\n                    router.viewDidLoad.call(curr);\n                }else{\n                    warn('基于路由的Root Component，必须存在viewDidLoad钩子');\n                };\n                if (!curr._didLoad) {\n                    curr._didLoad = true;\n                    curr.trigger('viewDidAppear');\n                };\n            });\n            //视图将要呈现之前\n            curr.on('viewWillAppear', function() {\n                if (_.isFunction(router.viewWillAppear)) {\n                    router.viewWillAppear.call(curr);\n                }else{\n                    warn('基于路由的Root Component，必须存在viewWillAppear');\n                };\n                if (!curr._didLoad) {\n                    //viewDidLoad事件还未触发\n                    curr.trigger('viewDidLoad');\n                }else{\n                    curr.trigger('viewDidAppear');\n                };\n            });\n            //视图已经呈现之后\n            curr.on('viewDidAppear', function() {\n                if (_.isFunction(router.viewDidAppear)) {\n                    router.viewDidAppear.call(curr);\n                }else{\n                    warn('基于路由的Root Component，必须存在viewDidAppear');\n                };\n            });\n            curr.trigger('viewWillAppear');\n        }\n        return curr;\n    }\n});\nmodule.exports = BaseRouter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/instance/baseRouter.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * @time 2016年3月29日\n * @author icepy\n * @info 实体管理类\n */\nvar Tools = require('../util/tools');\nvar baseModelSort = [];\n\nvar ManagedObject = function(options){\n    options = options || {};\n    this.entity = options.entity || {};\n};\n\nManagedObject.prototype.$update = function(obj){\n    var entity = _.extend(this.entity,obj);\n    this.entity = null;\n    this.entity = entity;\n};\n/**\n * [$get 从实体中获取数据，无参将返回所有数据，参数使用.结构化表达式（this.$get('items.0.id')）]\n * @param  {[type]} expression [description]\n * @return {[type]}            [description]\n */\nManagedObject.prototype.$get = function(expression){\n    if (!expression) {\n        return this.entity;\n    }\n    var attrNodes = expression.split('.');\n    var lh = attrNodes.length;\n    if (lh > 0) {\n        var node = attrNodes[0];\n        var i = 0;\n        var entity = this.entity;\n        while(node){\n            i++\n            entity = entity[node];\n            node = attrNodes[i];\n        }\n        return entity;\n    }\n};\n/**\n * [$set 向实体内部更新数据，以key/value的方式，第一个参数使用结构化表达式，第二个参数可以是任意类型的数据]\n * @param {[type]} expression [description]\n * @param {[type]} value      [description]\n */\nManagedObject.prototype.$set = function(expression,value,options){\n    if (expression === null || expression === undefined) {\n        return this;\n    };\n    if (Tools.isPlainObject(expression)) {\n        this.entity = null;\n        this.entity = expression;\n        return this.entity;\n    };\n    var attrNodes = expression.split('.');\n    var lh = attrNodes.length;\n    if (lh > 0) {\n        var i = 0;\n        var node = attrNodes[i];\n        var entity = this.entity;\n        if (lh !== 1) {\n            while(node){\n                i++\n                entity = entity[node];\n                node = attrNodes[i];\n                if (i > (lh - 2)) {\n                    break;\n                }\n            }\n        }\n        switch(Tools.toType(entity)){\n            case '[object Object]':\n                entity[node] = value;\n                break;\n            case '[object Array]':\n                entity[Tools.exportToNumber(node)] = value;\n                break;\n            default:\n                entity = value;\n                break;\n        };\n    }\n};\n/**\n * [$filter 向实体内部的某项数据进行筛选，第一个参数是要筛选数据的.结构化表达式，第二个参数是筛选根据]\n * @param  {[type]} expression [description]\n * @param  {[type]} value      [description]\n * @return {[type]}            [description]\n */\nManagedObject.prototype.$filter = function(expression,value){\n    var data = this.$get(expression);\n    var result = [];\n    if (Tools.isArray(data)) {\n        var i = data.length;\n        var n;\n        while(i--){\n            var val = data[i];\n            switch(Tools.toType(value)){\n                case '[object Object]':\n                    n = true;\n                    for(var k in value){\n                        if (!(val[k] === value[k])) {\n                            n = null;\n                            break;\n                        }\n                    }\n                    break\n                case '[object Function]':\n                    n = value(val,i);\n                    break\n                default:\n                    n = (val === value);\n                    break\n            };\n            if (n) {\n                result.push(val)\n            };\n        };\n    };\n    return result;\n};\n/**\n * [$sort 对实体内部的某项数据进行排序，第二个参数是要排序数据的.结构化表达式，第二个参数是排序的根据]\n * @param  {[type]} expression [description]\n * @param  {[type]} value      [description]\n * @return {[type]}            [description]\n */\nManagedObject.prototype.$sort = function(expression,value){\n    // > 大于 true\n    // < 小于 false\n    var data = this.$get(expression);\n    baseModelSort.length = 0;\n    if (Tools.isArray(data)) {\n        switch(Tools.toType(value)){\n            case '[object Function]':\n                baseModelSort = this._sort(data,value)\n                break\n            default:\n                if (typeof value === 'string') {\n                    var attrNodes = value.split('.');\n                    var logic = null;\n                    var lh = attrNodes.length - 1;\n                    switch(attrNodes[lh]){\n                        case '>':\n                            logic = true;\n                            break\n                        case '<':\n                            logic = false;\n                            break\n                        default:\n                            return baseModelSort;\n                            break\n                    };\n                    if (logic !== null) {\n                        return this._sort(data,function(val1,val2){\n                            var node = attrNodes[0];\n                            var i = 0;\n                            while(node){\n                                val1 = val1[node];\n                                val2 = val2[node];\n                                i++\n                                if (i === lh) {\n                                    break;\n                                };\n                                node = attrNodes[i];\n                            }\n                            if (logic) {\n                                return val1 > val2;\n                            }else{\n                                return val1 < val2;\n                            };\n                        });\n                    }\n\n                };\n                break\n        }\n    };\n    return baseModelSort;\n};\n\nManagedObject.prototype._sort = function(data,fun){\n    var n = data.length;\n    if (n < 2) {\n        return data;\n    };\n    var i = 0;\n    var j = i+1;\n    var logic,temp,key;\n    for(;i<j;i++){\n        for(j = i+1;j<n;j++){\n            logic = fun.call(this,data[i],data[j]);\n            key = (typeof logic === 'number' ? logic : !!logic ? 1 : 0) > 0 ? true : false;\n            if (key) {\n                temp = data[i];\n                data[i] = data[j];\n                data[j] = temp;\n            }\n        }\n    }\n    return data;\n};\n\nmodule.exports = ManagedObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/entity/ManagedObject.js\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}